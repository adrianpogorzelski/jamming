{"version":3,"sources":["reportWebVitals.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/Tracklist/Tracklist.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","index.js"],"names":["onPerfEntry","SearchBar","className","placeholder","React","Component","Track","props","addTrack","bind","removeTrack","this","isRemoval","onClick","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","e","onNameChange","target","value","defaultValue","onChange","playlistName","playlistTracks","App","state","updatePlaylistName","find","savedTrack","push","setState","filtered","filter","current","ReactDOM","render","StrictMode","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.03be36b6.chunk.js","sourcesContent":["export const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import React from 'react';\nimport './SearchBar.css';\n\nexport class SearchBar extends React.Component {\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <input placeholder=\"Enter A Song, Album, or Artist\"/>\n                <button className=\"SearchButton\">SEARCH</button>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './Track.css';\n\nexport class Track extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n    }\n\n\n    renderAction() {\n        if (this.props.isRemoval) {\n            return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\n        } else {\n            return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\n        }\n    };\n\n    addTrack() {\n        this.props.onAdd(this.props.track)\n    };\n\n    removeTrack() {\n        this.props.onRemove(this.props.track)\n    };\n\n    render() {\n        return (\n            <div className=\"Track\">\n                <div className=\"Track-information\">\n                    <h3>{this.props.name}</h3>\n                    <p>{this.props.artist} | {this.props.album} </p>\n                </div>\n                {this.renderAction()}\n            </div>\n        )\n    };\n}","import React from 'react';\nimport './Tracklist.css';\nimport {Track} from \"../Track/Track\";\n\nexport class TrackList extends React.Component {\n    render() {\n        return (\n            <div className=\"TrackList\">\n                {this.props.tracks && this.props.tracks.map(track => {\n                    return <Track\n                        onAdd={this.props.onAdd}\n                        onRemove={this.props.onRemove}\n                        isRemoval={this.props.isRemoval}\n                        track={track}\n                        key={track.id}\n                        name={track.name}\n                        artist={track.artist}\n                        album={track.album}\n                        />\n                })}\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './SearchResults.css'\nimport {TrackList} from \"../Tracklist/Tracklist\";\n\nexport class SearchResults extends React.Component {\n    render() {\n        return (\n        <div className=\"SearchResults\">\n            <h2>Results</h2>\n            <TrackList\n                tracks={this.props.searchResults}\n                onAdd={this.props.onAdd}\n                isRemoval={false}\n            />\n        </div>\n        )\n    }\n}","import React from 'react';\nimport './Playlist.css';\nimport {TrackList} from \"../Tracklist/Tracklist\";\n\nexport class Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleNameChange = this.handleNameChange.bind(this);\n    }\n\n    handleNameChange(e) {\n        this.props.onNameChange(e.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"Playlist\">\n                <input defaultValue={'New Playlist'} onChange={this.handleNameChange}/>\n                <TrackList\n                    playlistName={this.props.playlistName}\n                    tracks={this.props.playlistTracks}\n                    onRemove={this.props.onRemove}\n                    isRemoval={true}\n                />\n                <button className=\"Playlist-save\">SAVE TO SPOTIFY</button>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './App.css';\nimport {SearchBar} from \"../SearchBar/SearchBar\";\nimport {SearchResults} from \"../SearchResults/SearchResults\";\nimport {Playlist} from \"../Playlist/Playlist\";\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchResults: [\n            {\n                name: 'Name 1',\n                artist: 'Artist 1',\n                album: 'Album 1',\n                id: 'ID 1'\n            }, {\n                name: 'Name 2',\n                artist: 'Artist 2',\n                album: 'Album 2',\n                id: 'ID 2'\n            }, {\n                name: 'Name 3',\n                artist: 'Artist 3',\n                album: 'Album 3',\n                id: 'ID 3'\n            }],\n            playlistName: \"My playlist\",\n            playlistTracks: [\n                {\n                    name: 'Name 1',\n                    artist: 'Artist 1',\n                    album: 'Album 1',\n                    id: 'ID 1'\n                }, {\n                    name: 'Name 5',\n                    artist: 'Artist 5',\n                    album: 'Album 5',\n                    id: 'ID 5'\n                }, {\n                    name: 'Name 6',\n                    artist: 'Artist 6',\n                    album: 'Album 6',\n                    id: 'ID 6'\n                }]\n        } //this.state\n        this.addTrack = this.addTrack.bind(this)\n        this.removeTrack = this.removeTrack.bind(this)\n        this.updatePlaylistName = this.updatePlaylistName.bind(this)\n    }; //constructor\n\n    addTrack(track) {\n        let tracks = this.state.playlistTracks;\n        if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n            return;\n        } else {\n            tracks.push(track)\n            this.setState({playlistTracks: tracks})\n        }\n    }; // addTrack\n\n    removeTrack(track) {\n        let tracks = this.state.playlistTracks;\n        let filtered = tracks.filter(current => current.id !== track.id)\n        this.setState({playlistTracks: filtered})\n    }\n\n    updatePlaylistName(name) {\n        this.setState({playlistName: name})\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n                <div className=\"App\">\n                    <SearchBar />\n                    <div className=\"App-playlist\">\n                        <SearchResults\n                            searchResults={this.state.searchResults}\n                            onAdd={this.addTrack}\n                        />\n                        <Playlist\n                            playlistName={this.state.playlistName}\n                            playlistTracks={this.state.playlistTracks}\n                            onRemove={this.removeTrack}\n                            onNameChange={this.updatePlaylistName}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './Components/App/App';\nimport {reportWebVitals} from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}